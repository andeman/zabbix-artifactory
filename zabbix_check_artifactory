#!/usr/bin/env python3
import json
import argparse
import requests

known_services = {
    'jfac': "Access - The authentication server and service registry",
    'jffe': "Frontend - The application user interface (UI for the entire JFrog Platform Deployment)",
    'jfmd': "Metadata - The Components metadata server. Serves the Packages screen in the JFrog Platform Deployment UI.",
    'jfrt': "Router - The central hub for communication between all the microservices, and cross-product.",
}

def get_args():
    parser = argparse.ArgumentParser(
        description='zabbix lld discover artifactory services.',
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument(
        '--url',
        help='The Artifactory router url eg. http://127.0.0.1:8082',
        default='http://127.0.0.1:8082',
        required=False
    )

    parser.add_argument(
        '--path',
        help='The Artifactory Health Check url path',
        default='/router/api/v1/system/health',
        required=False
    )

    parser.add_argument(
        '--service',
        help='Display stats for this artifactoy service',
        choices=list(known_services.keys()),
        required=False
    )
    parser.add_argument(
        '--item',
        choices=['health'],
        help='Output stats item for specific service.',
        required=False
    )

    parser.add_argument('mode', choices=['discovery', 'stats'], help='The zabbix lld modus.')
    return parser.parse_args()


def get_data_from_api(api_url):
    data = requests.get(api_url).json()

    services_by_name = {}
    for service in data['services']:
        service['name'] = service['service_id'].split("@")[0]
        service['desc'] = known_services.get(service['name'], 'Unkown service name %s (service_id: %s)' % (
            service['name'], service['service_id']))
        services_by_name.update({
            service['name']: service
        })
    data['services'] = services_by_name
    return data


def get_item_from_data(data, service_name, item):
    service = data['services'].get(service_name)
    if item == 'health':
        return "%s - %s" % (service['message'], service['state'])


if __name__ == "__main__":
    args = get_args()
    api_url = f"{args.url}{args.path}"
    data = get_data_from_api(api_url)

    if args.mode == 'discovery':
        result = {"data": []}
        services = []
        for service_name, service in data['services'].items():
            result["data"].append({
                "{#SERVICE}": "%s" % service['name'],
                "{#SERVICE_DESC}": "%s" % service['desc'],
            })

        print(json.dumps(result))

    if args.mode == 'stats':
        print(get_item_from_data(data, args.service, args.item))
